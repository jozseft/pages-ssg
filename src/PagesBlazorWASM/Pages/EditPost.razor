@using PagesCommon.DTOs
@using PagesBlazorWASM.Components
@page "/edit-post"
@page "/edit-post/{id:guid}"
@inject HttpClient Http

<h3>Edit Post</h3>

@if (Id != Guid.Empty)
{ 
    <button type="button" @onclick="PublishPost">Publish</button>
}

<EditForm Model="@postForm" OnValidSubmit="@SavePost">
    <DataAnnotationsValidator />

    <InputText @bind-Value="postForm.Title"></InputText>
    <ValidationMessage For="@(() => postForm.Title)" />

    <InputMarkdown @bind-Value="postForm.MarkdownText" ValidationFor="@(() => postForm.MarkdownText)" />

    <button type="submit">Save</button>
</EditForm>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private PostDTO postForm = new PostDTO();

    protected override async Task OnInitializedAsync()
    {
        if (Id != Guid.Empty)
        {
            postForm = await Http.GetFromJsonAsync<PostDTO>(GlobalConstants.BaseAPI + "/api/post/" + Id);
        }
    }

    protected async Task SavePost()
    {
        var response = await Http.PostAsJsonAsync<PostDTO>(GlobalConstants.BaseAPI + "/api/post", postForm);
        Id = await response.Content.ReadFromJsonAsync<Guid>();
    }

    protected async Task PublishPost()
    {
        var response = await Http.PostAsync(GlobalConstants.BaseAPI + "/api/post/publish/" + Id, null);
        bool isPublished = await response.Content.ReadFromJsonAsync<bool>();

        if (isPublished)
        {
            // show a popup or redirect to the page
        }
    }
}
